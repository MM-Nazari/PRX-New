// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PRX.Data;

#nullable disable

namespace PRX.Migrations
{
    [DbContext(typeof(PRXDbContext))]
    [Migration("20240424073152_temp")]
    partial class temp
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PRX.Models.Haghighi.HaghighiUserEducationStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FieldOfStudy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GraduationYear")
                        .HasColumnType("int");

                    b.Property<bool>("IsComplete")
                        .HasColumnType("bit");

                    b.Property<string>("IssuingAuthority")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastDegree")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("HaghighiUserEducationStatuses");
                });

            modelBuilder.Entity("PRX.Models.Haghighi.HaghighiUserEmploymentHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EmployerLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsComplete")
                        .HasColumnType("bit");

                    b.Property<string>("MainActivity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("WorkAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("HaghighiUserEmploymentHistories");
                });

            modelBuilder.Entity("PRX.Models.Haghighi.HaghighiUserFinancialProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("ContinuousExpenses")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ContributionToOthers")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsComplete")
                        .HasColumnType("bit");

                    b.Property<decimal>("MainContinuousIncome")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OccasionalExpenses")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OtherIncomes")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SupportFromOthers")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("HaghighiUserFinancialProfiles");
                });

            modelBuilder.Entity("PRX.Models.Haghighi.HaghighiUserProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BestTimeToCall")
                        .HasColumnType("datetime2");

                    b.Property<string>("BirthCertificateNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BirthPlace")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FathersName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fax")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomePhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsComplete")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaritalStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("PostalCode")
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.Property<string>("ResidentialAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.HasIndex("NationalNumber", "Email", "BirthCertificateNumber")
                        .IsUnique();

                    b.ToTable("HaghighiUserProfiles");
                });

            modelBuilder.Entity("PRX.Models.Haghighi.HaghighiUserRelationships", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("ApproximateAssets")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ApproximateLiabilities")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AverageMonthlyExpense")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AverageMonthlyIncome")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("BirthYear")
                        .HasColumnType("int");

                    b.Property<string>("EducationLevel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmploymentStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsComplete")
                        .HasColumnType("bit");

                    b.Property<string>("RelationshipStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("HaghighiUserRelationships");
                });

            modelBuilder.Entity("PRX.Models.Hoghooghi.HoghooghiUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BestTimeToCall")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fax")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("IsComplete")
                        .HasColumnType("bit");

                    b.Property<string>("LandlinePhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainActivityBasedOnCharter")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainActivityBasedOnPastThreeYearsPerformance")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalId")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RegistrationLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegistrationNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RepresentativeMobilePhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RepresentativeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RepresentativeNationalId")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("HoghooghiUsers");
                });

            modelBuilder.Entity("PRX.Models.Hoghooghi.HoghooghiUserBoardOfDirectors", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EducationalLevel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExecutiveExperience")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FamiliarityWithCapitalMarket")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FieldOfStudy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsComplete")
                        .HasColumnType("bit");

                    b.Property<string>("PersonalInvestmentExperienceInStockExchange")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("HoghooghiUserBoardOfDirectors");
                });

            modelBuilder.Entity("PRX.Models.Hoghooghi.HoghooghiUserCompaniesWithMajorInvestors", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanySubject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsComplete")
                        .HasColumnType("bit");

                    b.Property<decimal>("PercentageOfTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("HoghooghiUserCompaniesWithMajorInvestors");
                });

            modelBuilder.Entity("PRX.Models.Hoghooghi.HoghooghiUserInvestmentDepartmentStaff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EducationalLevel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExecutiveExperience")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FamiliarityWithCapitalMarket")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FieldOfStudy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsComplete")
                        .HasColumnType("bit");

                    b.Property<string>("PersonalInvestmentExperienceInStockExchange")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("HoghooghiUserInvestmentDepartmentStaff");
                });

            modelBuilder.Entity("PRX.Models.Hoghooghis.Hoghooghi.HoghooghiUserAssetIncomeStatusTwoYearsAgo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("AccumulatedProfitOrLoss")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("ApproximateAssetValue")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("FiscalYear")
                        .HasColumnType("int");

                    b.Property<bool>("IsComplete")
                        .HasColumnType("bit");

                    b.Property<decimal>("NetProfitOrLoss")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("OperationalExpenses")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("OperationalIncome")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("OperationalProfitOrLoss")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("OtherExpenses")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("OtherIncome")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("RegisteredCapital")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("TotalInvestments")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("TotalLiabilities")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("HoghooghiUsersAssets");
                });

            modelBuilder.Entity("PRX.Models.Quiz.UserAnswer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AnswerOptionId")
                        .HasColumnType("int");

                    b.Property<string>("AnswerText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnswerOptionId")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("UserAnswers");
                });

            modelBuilder.Entity("PRX.Models.Quiz.UserAnswerOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("UserAnswerOptions");
                });

            modelBuilder.Entity("PRX.Models.Quiz.UserQuestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserQuestions");
                });

            modelBuilder.Entity("PRX.Models.Quiz.UserTestScore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("UserTestScores");
                });

            modelBuilder.Entity("PRX.Models.User.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("ReferenceCode")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PhoneNumber", "ReferenceCode")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PRX.Models.User.UserAsset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("AssetPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("AssetTypeId")
                        .HasColumnType("int");

                    b.Property<decimal>("AssetValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsComplete")
                        .HasColumnType("bit");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AssetTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("UserAssets");
                });

            modelBuilder.Entity("PRX.Models.User.UserAssetType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserAssetTypes");
                });

            modelBuilder.Entity("PRX.Models.User.UserDebt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("DebtAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DebtDueDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DebtRepaymentPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DebtTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsComplete")
                        .HasColumnType("bit");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserDebts");
                });

            modelBuilder.Entity("PRX.Models.User.UserDeposit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("DepositAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DepositDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DepositSource")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsComplete")
                        .HasColumnType("bit");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserDeposits");
                });

            modelBuilder.Entity("PRX.Models.User.UserFinancialChanges", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsComplete")
                        .HasColumnType("bit");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("UserFinancialChanges");
                });

            modelBuilder.Entity("PRX.Models.User.UserFuturePlans", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsComplete")
                        .HasColumnType("bit");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("UserFuturePlans");
                });

            modelBuilder.Entity("PRX.Models.User.UserInvestment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsComplete")
                        .HasColumnType("bit");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("UserInvestments");
                });

            modelBuilder.Entity("PRX.Models.User.UserInvestmentExperience", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConversionReason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("InvestmentAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("InvestmentDurationMonths")
                        .HasColumnType("int");

                    b.Property<string>("InvestmentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsComplete")
                        .HasColumnType("bit");

                    b.Property<decimal>("ProfitLossAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProfitLossDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserInvestmentExperiences");
                });

            modelBuilder.Entity("PRX.Models.User.UserMoreInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Info")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsComplete")
                        .HasColumnType("bit");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("UserMoreInformations");
                });

            modelBuilder.Entity("PRX.Models.User.UserState", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("userStates");
                });

            modelBuilder.Entity("PRX.Models.User.UserType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("userTypes");
                });

            modelBuilder.Entity("PRX.Models.User.UserWithdrawal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsComplete")
                        .HasColumnType("bit");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<decimal>("WithdrawalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("WithdrawalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WithdrawalReason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserWithdrawals");
                });

            modelBuilder.Entity("PRX.Models.Haghighi.HaghighiUserEducationStatus", b =>
                {
                    b.HasOne("PRX.Models.User.User", "User")
                        .WithOne("HaghighiUserEducationStatus")
                        .HasForeignKey("PRX.Models.Haghighi.HaghighiUserEducationStatus", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PRX.Models.Haghighi.HaghighiUserEmploymentHistory", b =>
                {
                    b.HasOne("PRX.Models.User.User", "User")
                        .WithMany("EmploymentHistories")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PRX.Models.Haghighi.HaghighiUserFinancialProfile", b =>
                {
                    b.HasOne("PRX.Models.User.User", "User")
                        .WithOne("HaghighiUserFinancialProfiles")
                        .HasForeignKey("PRX.Models.Haghighi.HaghighiUserFinancialProfile", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PRX.Models.Haghighi.HaghighiUserProfile", b =>
                {
                    b.HasOne("PRX.Models.User.User", "User")
                        .WithOne("HaghighiUserProfile")
                        .HasForeignKey("PRX.Models.Haghighi.HaghighiUserProfile", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PRX.Models.Haghighi.HaghighiUserRelationships", b =>
                {
                    b.HasOne("PRX.Models.User.User", "User")
                        .WithMany("HaghighiUserRelationships")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PRX.Models.Hoghooghi.HoghooghiUser", b =>
                {
                    b.HasOne("PRX.Models.User.User", "User")
                        .WithOne("HoghooghiUser")
                        .HasForeignKey("PRX.Models.Hoghooghi.HoghooghiUser", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PRX.Models.Hoghooghi.HoghooghiUserBoardOfDirectors", b =>
                {
                    b.HasOne("PRX.Models.User.User", "User")
                        .WithMany("HoghooghiUserBoardOfDirectors")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PRX.Models.Hoghooghi.HoghooghiUserCompaniesWithMajorInvestors", b =>
                {
                    b.HasOne("PRX.Models.User.User", "User")
                        .WithMany("HoghooghiUserCompaniesWithMajorInvestors")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PRX.Models.Hoghooghi.HoghooghiUserInvestmentDepartmentStaff", b =>
                {
                    b.HasOne("PRX.Models.User.User", "User")
                        .WithMany("HoghooghiUserInvestmentDepartmentStaff")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PRX.Models.Hoghooghis.Hoghooghi.HoghooghiUserAssetIncomeStatusTwoYearsAgo", b =>
                {
                    b.HasOne("PRX.Models.User.User", "User")
                        .WithMany("hoghooghiUserAssetIncomeStatusTwoYearsAgos")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PRX.Models.Quiz.UserAnswer", b =>
                {
                    b.HasOne("PRX.Models.Quiz.UserAnswerOption", "answerOption")
                        .WithOne("UserAnswer")
                        .HasForeignKey("PRX.Models.Quiz.UserAnswer", "AnswerOptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PRX.Models.User.User", "User")
                        .WithMany("UserAnswer")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("answerOption");
                });

            modelBuilder.Entity("PRX.Models.Quiz.UserAnswerOption", b =>
                {
                    b.HasOne("PRX.Models.Quiz.UserQuestion", "UserQuestion")
                        .WithMany("AnswerOptions")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserQuestion");
                });

            modelBuilder.Entity("PRX.Models.Quiz.UserTestScore", b =>
                {
                    b.HasOne("PRX.Models.User.User", "User")
                        .WithOne("UserTestScore")
                        .HasForeignKey("PRX.Models.Quiz.UserTestScore", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PRX.Models.User.UserAsset", b =>
                {
                    b.HasOne("PRX.Models.User.UserAssetType", "UserAssetType")
                        .WithMany("UserAssets")
                        .HasForeignKey("AssetTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PRX.Models.User.User", "User")
                        .WithMany("UserAssets")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("UserAssetType");
                });

            modelBuilder.Entity("PRX.Models.User.UserDebt", b =>
                {
                    b.HasOne("PRX.Models.User.User", "User")
                        .WithMany("UserDebts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PRX.Models.User.UserDeposit", b =>
                {
                    b.HasOne("PRX.Models.User.User", "User")
                        .WithMany("UserDeposits")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PRX.Models.User.UserFinancialChanges", b =>
                {
                    b.HasOne("PRX.Models.User.User", "User")
                        .WithOne("UserFinancialChanges")
                        .HasForeignKey("PRX.Models.User.UserFinancialChanges", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PRX.Models.User.UserFuturePlans", b =>
                {
                    b.HasOne("PRX.Models.User.User", "User")
                        .WithOne("UserFuturePlans")
                        .HasForeignKey("PRX.Models.User.UserFuturePlans", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PRX.Models.User.UserInvestment", b =>
                {
                    b.HasOne("PRX.Models.User.User", "User")
                        .WithOne("UserInvestment")
                        .HasForeignKey("PRX.Models.User.UserInvestment", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PRX.Models.User.UserInvestmentExperience", b =>
                {
                    b.HasOne("PRX.Models.User.User", "User")
                        .WithMany("UserInvestmentExperiences")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PRX.Models.User.UserMoreInformation", b =>
                {
                    b.HasOne("PRX.Models.User.User", "User")
                        .WithOne("UserMoreInformation")
                        .HasForeignKey("PRX.Models.User.UserMoreInformation", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PRX.Models.User.UserState", b =>
                {
                    b.HasOne("PRX.Models.User.User", "User")
                        .WithOne("userState")
                        .HasForeignKey("PRX.Models.User.UserState", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PRX.Models.User.UserType", b =>
                {
                    b.HasOne("PRX.Models.User.User", "User")
                        .WithMany("userTypes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PRX.Models.User.UserWithdrawal", b =>
                {
                    b.HasOne("PRX.Models.User.User", "User")
                        .WithMany("UserWithdrawals")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PRX.Models.Quiz.UserAnswerOption", b =>
                {
                    b.Navigation("UserAnswer")
                        .IsRequired();
                });

            modelBuilder.Entity("PRX.Models.Quiz.UserQuestion", b =>
                {
                    b.Navigation("AnswerOptions");
                });

            modelBuilder.Entity("PRX.Models.User.User", b =>
                {
                    b.Navigation("EmploymentHistories");

                    b.Navigation("HaghighiUserEducationStatus")
                        .IsRequired();

                    b.Navigation("HaghighiUserFinancialProfiles")
                        .IsRequired();

                    b.Navigation("HaghighiUserProfile")
                        .IsRequired();

                    b.Navigation("HaghighiUserRelationships");

                    b.Navigation("HoghooghiUser")
                        .IsRequired();

                    b.Navigation("HoghooghiUserBoardOfDirectors");

                    b.Navigation("HoghooghiUserCompaniesWithMajorInvestors");

                    b.Navigation("HoghooghiUserInvestmentDepartmentStaff");

                    b.Navigation("UserAnswer");

                    b.Navigation("UserAssets");

                    b.Navigation("UserDebts");

                    b.Navigation("UserDeposits");

                    b.Navigation("UserFinancialChanges")
                        .IsRequired();

                    b.Navigation("UserFuturePlans")
                        .IsRequired();

                    b.Navigation("UserInvestment")
                        .IsRequired();

                    b.Navigation("UserInvestmentExperiences");

                    b.Navigation("UserMoreInformation")
                        .IsRequired();

                    b.Navigation("UserTestScore")
                        .IsRequired();

                    b.Navigation("UserWithdrawals");

                    b.Navigation("hoghooghiUserAssetIncomeStatusTwoYearsAgos");

                    b.Navigation("userState")
                        .IsRequired();

                    b.Navigation("userTypes");
                });

            modelBuilder.Entity("PRX.Models.User.UserAssetType", b =>
                {
                    b.Navigation("UserAssets");
                });
#pragma warning restore 612, 618
        }
    }
}
